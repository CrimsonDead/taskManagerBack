// <auto-generated />
using System;
using DBL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DBL.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230403212338_v0.4")]
    partial class v04
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DBL.Models.Job", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("EstimetedTime")
                        .HasColumnType("time");

                    b.Property<int?>("JobRefId")
                        .HasColumnType("int");

                    b.Property<int>("Progreess")
                        .HasColumnType("int");

                    b.Property<int>("ProjectRefId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("SpentTime")
                        .HasColumnType("time");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("SubJobJobId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobId");

                    b.HasIndex("ProjectRefId");

                    b.HasIndex("SubJobJobId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("DBL.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            Description = "SF mid 1x1",
                            Title = "ZXC Lobby"
                        });
                });

            modelBuilder.Entity("DBL.Models.Job", b =>
                {
                    b.HasOne("DBL.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBL.Models.Job", "SubJob")
                        .WithMany()
                        .HasForeignKey("SubJobJobId");

                    b.Navigation("Project");

                    b.Navigation("SubJob");
                });
#pragma warning restore 612, 618
        }
    }
}
